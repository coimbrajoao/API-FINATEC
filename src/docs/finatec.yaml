openapi: 3.0.0
info:
  title: "API finatec"
  version: "1.0.0"
  description: "Documentação da API finatec"

servers:
  - url: http://localhost:8080
    description: Servidor Local

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Autenticação via JWT. Informe o token para acessar a API."

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        password:
          type: string  
        confirmedPassword:
          type: string
        cpf:
          type: string
        admin:
          type: boolean
        required:
          - name
          - email
          - password
          - confirmedPassword
          - admin
          - cpf

      example:
        name: "João"
        email: "FbWtI@example.com"
        password: "123456"
        confirmedPassword: "123456"
        admin: false
        CPF: "123.456.789-00"

    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        required:
          - email
          - password

      example:
        email: "FbWtI@example.com"
        password: "123456"
      
    Token:
      type: object
      properties:
        token:
          type: string
      example:
        token

    Error:
      type: object
      properties:
        message:
          type: string
      example:
        message: "Usuário não encontrado"
    
paths:
  /auth/signup:
    post:
      summary: "Cadastrar usuário"
      description: "Registra o usuario"
      tags:
        - "Auth"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: "Usuário cadastrado com sucesso"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: "Usuário ja cadastrado"
        "500":
          description: "Erro interno do servidor"

  /auth/:
    post:
      summary: "Login"
      description: "Efetua o login"
      tags:
        - "Auth"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: "Login efetuado com sucesso"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        "400":
          description: "Usuário não encontrado"
        "500":
          description: "Erro interno do servidor"

  /users:
    get:
      summary: "Listar todos os usuários"
      description: "Retorna uma lista de todos os usuarsios"
      tags:
        - "User"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "Usuários listados com sucesso"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: "Não autorizado"
        "500":
          description: "Erro interno do servidor"
        

  /users/{id}:
    get:
      summary: "Buscar usuário por ID"
      description: "Retorna um usuário pelo ID"
      tags:
        - "User"
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do usuário"
          schema:
            type: integer
      responses:
        "200":
          description: "Usuário encontrado"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: "Usuário não encontrado"
        "500":
          description: "Erro interno do servidor"

    put:
      summary: "Atualizar usuário"
      description: "Atualiza um usuário"
      tags:
        - "User"
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do usuário"
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: "Usuário atualizado com sucesso"
        "400":
          description: "Usuário não encontrado"
        "500":
          description: "Erro interno do servidor"

    delete:
      summary: "Deletar usuário"
      description: "Deleta um usuário"
      tags:
        - "User"
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: "ID do usuário"
          schema:
            type: integer
      responses:
        "200":
          description: "Usuário deletado com sucesso"
        "404":
          description: "Usuário não encontrado"
        "500":
          description: "Erro interno do servidor"

  /users/:
    post:
      summary: "Cadastrar usuário somente adiministrador"
      description: "Registra o usuario"
      tags:
        - "User"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: "Usuário cadastrado com sucesso"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: "Usuário ja cadastrado"
        "500":
          description: "Erro interno do servidor"





